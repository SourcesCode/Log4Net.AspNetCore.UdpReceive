<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <log4net>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout" value="%d [%t] %-5p %c [%x] - %m%n"/>
    </appender>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志路径-->
      <param name="File" value="logs/"/>
      <!--使用UTF8编码-->
      <param name="Encoding" value="UTF-8"/>
      <!--是否追加到文件,默认为true-->
      <param name="AppendToFile" value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <!--<param name= "LockingModel" type="log4net.Appender.FileAppender+MinimalLock"/>-->
      <!--日志文件名是否是固定不变的-->
      <param name="StaticLogFileName" value="false"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <!--当变换的形式RollingStyle为日期时，每天只有一个日志，MaxSizeRollBackups和MaximumFileSize的节点设置没有意义
      当变换的形式为日志大小时，MaxSizeRollBackups和MaximumFileSize的节点设置才有意义-->
      <param name= "RollingStyle" value="Date"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数，与MaximumFileSize配合使用-->
      <!--<param name= "MaxSizeRollBackups" value="10"/>-->
      <!--每个文件的大小。[只在混合方式与文件大小方式下使用]
      超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
      可用的单位:KB|MB|GB，不要使用小数,否则会一直写入当前日志-->
      <!--<param name="MaximumFileSize" value="10MB" />-->
      <!--按日期产生文件夹和文件名[在日期方式与混合方式下使用]，文件名固定部分使用符号，注意&quot;的位置-->
      <param name="DatePattern" value="yyyy-MM-dd'.log'"/>
      <!--<param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;.log&quot;"/>-->
      <!--记录的格式。一般用log4net.Layout.PatternLayout布局-->
      <layout type="log4net.Layout.PatternLayout">
        <!--<param name="Header" value="********************Header********************" />-->
        <!--<param name="Footer" value="********************Footer********************" />-->
        <!--样例：2018-09-28 14:01:05,883 [1] INFO  Log4Net.AspNetCore.UdpSend.ConsoleDemo.LogHelper [(null)] - this is test-->
        <param name="ConversionPattern" value="%d [%t] %-5p %c [%x] - %m%n" />
        <!--<param name="ConversionPattern" value="**********Header**********%nDateTime:%d%nThreadId:%t%nLogLevel:%-5p%nMessage:%m%nException:%n%exception%n**********Footer**********%n%n" />-->
      </layout>
    </appender>
    <appender name="UdpAppender" type="log4net.Appender.UdpAppender">
      <remoteAddress value="127.0.0.1"/>
      <remotePort value="8001"/>
      <!--使用UTF8编码-->
      <param name="Encoding" value="UTF-8"/>
      <layout type="log4net.Layout.PatternLayout" value="%d||%t||%p||%c||%x||%m||%exception||%r||%a"/>
      <!--<layout type="log4net.Layout.XmlLayoutSchemaLog4j" />.net core 不支持-->
    </appender>
    <logger name="loginfo">
      <!--<level value="DEBUG"/>-->
      <level value="INFO"/>
      <!--<level value="ERROR"/>-->
      <appender-ref ref="ConsoleAppender"/>
      <appender-ref ref="RollingFileAppender"/>
      <appender-ref ref="UdpAppender"/>
    </logger>
    <root>
      <!-- OFF, FATAL, ERROR, WARN, INFO, DEBUG, ALL -->
      <!-- Set root logger level to ERROR and its appenders -->
      <level value="ALL"/>
      <appender-ref ref="ConsoleAppender"/>
      <appender-ref ref="RollingFileAppender"/>
      <appender-ref ref="UdpAppender"/>
    </root>
  </log4net>
</configuration>